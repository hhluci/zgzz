<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- 启用注解 -->
	<context:annotation-config />
	<aop:aspectj-autoproxy proxy-target-class="true"/> 
	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:application.properties" />
	<!-- base-package 如果多个，用“,”分隔 --> 
	<context:component-scan base-package="com.seezoon.framework">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
			<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.RestController" />
	</context:component-scan>
	<!-- json 输出 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean
				class="com.seezoon.framework.common.context.support.SeezoonFastJsonHttpMessageConverter">
				<property name="supportedMediaTypes"> 
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<array>
						<value>WriteDateUseDateFormat</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	<!-- 静态资源映射 --> 
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>
	
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize" value="${web.maxUploadSize}" />  
	</bean>
	<mvc:interceptors>    
    <mvc:interceptor>    
        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
        <mvc:mapping path="/**" />
		<!--<mvc:exclude-mapping path="/hello/**"/>-->
        <bean class="com.seezoon.framework.common.context.filter.TraceWebFilter"></bean>    
    </mvc:interceptor>
    <mvc:interceptor>    
        <!-- 匹配的是url路径，后端通用拦截器 -->  
        <mvc:mapping path="/a/**" />
        <bean class="com.seezoon.framework.modules.system.filter.SystemFilter"></bean>    
    </mvc:interceptor>
    </mvc:interceptors>
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<!-- 是否有边框 可选yes 或者 no -->
						<prop key="kaptcha.border">yes</prop>
						<!-- 边框颜色 -->
						<prop key="kaptcha.border.color">105,179,90</prop>
						<!-- 验证码文本字符颜色 -->
						<prop key="kaptcha.textproducer.font.color">blue</prop>
						<!-- 验证码文本字符大小 -->
						<prop key="kaptcha.textproducer.font.size">45</prop>
						<!-- 验证码图片的宽度 默认200 -->
						<prop key="kaptcha.image.width">125</prop>
						<!-- 验证码图片的高度 默认50 -->
						<prop key="kaptcha.image.height">45</prop>
						<!-- 验证码文本字符长度 默认为5 -->
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<!-- 验证码文本字体样式 默认为new Font("Arial", 1, fontSize), new Font("Courier", 
							1, fontSize) -->
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<import resource="classpath:message/spring-message.xml"/>

</beans>